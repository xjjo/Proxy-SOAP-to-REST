package a.b.c;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.5.redhat-630187
 * 2017-12-28T06:04:43.090-08:00
 * Generated source version: 3.1.5.redhat-630187
 * 
 */
@WebServiceClient(name = "Calculator", 
                  wsdlLocation = "file:/C:/RedHat/workspace/Proxy-SOAP-to-REST/src/main/resources/wsdl/calculator.wsdl",
                  targetNamespace = "http://c.b.a") 
public class Calculator extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://c.b.a", "Calculator");
    public final static QName CalculatorHttpSoap11Endpoint = new QName("http://c.b.a", "CalculatorHttpSoap11Endpoint");
    public final static QName CalculatorHttpsSoap11Endpoint = new QName("http://c.b.a", "CalculatorHttpsSoap11Endpoint");
    public final static QName CalculatorHttpEndpoint = new QName("http://c.b.a", "CalculatorHttpEndpoint");
    public final static QName CalculatorHttpSoap12Endpoint = new QName("http://c.b.a", "CalculatorHttpSoap12Endpoint");
    public final static QName CalculatorHttpsSoap12Endpoint = new QName("http://c.b.a", "CalculatorHttpsSoap12Endpoint");
    public final static QName CalculatorHttpsEndpoint = new QName("http://c.b.a", "CalculatorHttpsEndpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/RedHat/workspace/Proxy-SOAP-to-REST/src/main/resources/wsdl/calculator.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Calculator.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/RedHat/workspace/Proxy-SOAP-to-REST/src/main/resources/wsdl/calculator.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Calculator(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Calculator(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Calculator() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public Calculator(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Calculator(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Calculator(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpSoap11Endpoint")
    public CalculatorPortType getCalculatorHttpSoap11Endpoint() {
        return super.getPort(CalculatorHttpSoap11Endpoint, CalculatorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpSoap11Endpoint")
    public CalculatorPortType getCalculatorHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(CalculatorHttpSoap11Endpoint, CalculatorPortType.class, features);
    }


    /**
     *
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpsSoap11Endpoint")
    public CalculatorPortType getCalculatorHttpsSoap11Endpoint() {
        return super.getPort(CalculatorHttpsSoap11Endpoint, CalculatorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpsSoap11Endpoint")
    public CalculatorPortType getCalculatorHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(CalculatorHttpsSoap11Endpoint, CalculatorPortType.class, features);
    }


    /**
     *
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpEndpoint")
    public CalculatorPortType getCalculatorHttpEndpoint() {
        return super.getPort(CalculatorHttpEndpoint, CalculatorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpEndpoint")
    public CalculatorPortType getCalculatorHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(CalculatorHttpEndpoint, CalculatorPortType.class, features);
    }


    /**
     *
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpSoap12Endpoint")
    public CalculatorPortType getCalculatorHttpSoap12Endpoint() {
        return super.getPort(CalculatorHttpSoap12Endpoint, CalculatorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpSoap12Endpoint")
    public CalculatorPortType getCalculatorHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(CalculatorHttpSoap12Endpoint, CalculatorPortType.class, features);
    }


    /**
     *
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpsSoap12Endpoint")
    public CalculatorPortType getCalculatorHttpsSoap12Endpoint() {
        return super.getPort(CalculatorHttpsSoap12Endpoint, CalculatorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpsSoap12Endpoint")
    public CalculatorPortType getCalculatorHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(CalculatorHttpsSoap12Endpoint, CalculatorPortType.class, features);
    }


    /**
     *
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpsEndpoint")
    public CalculatorPortType getCalculatorHttpsEndpoint() {
        return super.getPort(CalculatorHttpsEndpoint, CalculatorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorPortType
     */
    @WebEndpoint(name = "CalculatorHttpsEndpoint")
    public CalculatorPortType getCalculatorHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(CalculatorHttpsEndpoint, CalculatorPortType.class, features);
    }

}
